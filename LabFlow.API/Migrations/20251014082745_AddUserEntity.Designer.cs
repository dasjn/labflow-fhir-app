// <auto-generated />
using System;
using LabFlow.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabFlow.API.Migrations
{
    [DbContext(typeof(FhirDbContext))]
    [Migration("20251014082745_AddUserEntity")]
    partial class AddUserEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("LabFlow.API.Data.Entities.DiagnosticReportEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeDisplay")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Conclusion")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EffectiveDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FhirJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Issued")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResultIds")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Category")
                        .HasDatabaseName("IX_DiagnosticReports_Category");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_DiagnosticReports_Code");

                    b.HasIndex("EffectiveDateTime")
                        .HasDatabaseName("IX_DiagnosticReports_EffectiveDateTime");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_DiagnosticReports_IsDeleted");

                    b.HasIndex("Issued")
                        .HasDatabaseName("IX_DiagnosticReports_Issued");

                    b.HasIndex("LastUpdated")
                        .HasDatabaseName("IX_DiagnosticReports_LastUpdated");

                    b.HasIndex("PatientId")
                        .HasDatabaseName("IX_DiagnosticReports_PatientId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_DiagnosticReports_Status");

                    b.HasIndex("PatientId", "Issued")
                        .HasDatabaseName("IX_DiagnosticReports_PatientId_Issued");

                    b.ToTable("DiagnosticReports", (string)null);
                });

            modelBuilder.Entity("LabFlow.API.Data.Entities.ObservationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeDisplay")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EffectiveDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FhirJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueCodeableConcept")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ValueQuantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueUnit")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Category")
                        .HasDatabaseName("IX_Observations_Category");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_Observations_Code");

                    b.HasIndex("EffectiveDateTime")
                        .HasDatabaseName("IX_Observations_EffectiveDateTime");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Observations_IsDeleted");

                    b.HasIndex("LastUpdated")
                        .HasDatabaseName("IX_Observations_LastUpdated");

                    b.HasIndex("PatientId")
                        .HasDatabaseName("IX_Observations_PatientId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Observations_Status");

                    b.HasIndex("PatientId", "EffectiveDateTime")
                        .HasDatabaseName("IX_Observations_PatientId_EffectiveDateTime");

                    b.ToTable("Observations", (string)null);
                });

            modelBuilder.Entity("LabFlow.API.Data.Entities.PatientEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FamilyName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FhirJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("GivenName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Identifier")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BirthDate")
                        .HasDatabaseName("IX_Patients_BirthDate");

                    b.HasIndex("FamilyName")
                        .HasDatabaseName("IX_Patients_FamilyName");

                    b.HasIndex("GivenName")
                        .HasDatabaseName("IX_Patients_GivenName");

                    b.HasIndex("Identifier")
                        .HasDatabaseName("IX_Patients_Identifier");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Patients_IsDeleted");

                    b.HasIndex("LastUpdated")
                        .HasDatabaseName("IX_Patients_LastUpdated");

                    b.ToTable("Patients", (string)null);
                });

            modelBuilder.Entity("LabFlow.API.Data.Entities.ServiceRequestEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AuthoredOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CodeDisplay")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FhirJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Intent")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("OccurrenceDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformerId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Priority")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RequesterId")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("VersionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AuthoredOn")
                        .HasDatabaseName("IX_ServiceRequests_AuthoredOn");

                    b.HasIndex("Category")
                        .HasDatabaseName("IX_ServiceRequests_Category");

                    b.HasIndex("Code")
                        .HasDatabaseName("IX_ServiceRequests_Code");

                    b.HasIndex("Intent")
                        .HasDatabaseName("IX_ServiceRequests_Intent");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_ServiceRequests_IsDeleted");

                    b.HasIndex("LastUpdated")
                        .HasDatabaseName("IX_ServiceRequests_LastUpdated");

                    b.HasIndex("OccurrenceDateTime")
                        .HasDatabaseName("IX_ServiceRequests_OccurrenceDateTime");

                    b.HasIndex("PatientId")
                        .HasDatabaseName("IX_ServiceRequests_PatientId");

                    b.HasIndex("PerformerId")
                        .HasDatabaseName("IX_ServiceRequests_PerformerId");

                    b.HasIndex("RequesterId")
                        .HasDatabaseName("IX_ServiceRequests_RequesterId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_ServiceRequests_Status");

                    b.HasIndex("PatientId", "AuthoredOn")
                        .HasDatabaseName("IX_ServiceRequests_PatientId_AuthoredOn");

                    b.ToTable("ServiceRequests", (string)null);
                });

            modelBuilder.Entity("LabFlow.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Email");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Users_IsActive");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Users_IsDeleted");

                    b.HasIndex("Role")
                        .HasDatabaseName("IX_Users_Role");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
